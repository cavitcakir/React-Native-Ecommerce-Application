{"version":3,"sources":["createNavigator.js"],"names":["createNavigator","NavigatorView","router","navigationConfig","Navigator","React","Component","constructor","props","context","state","descriptors","screenProps","theme","themeContext","getDerivedStateFromProps","nextProps","currentState","prevDescriptors","navigation","routes","TypeError","reduce","acc","route","key","getComponent","getComponentForRouteName","bind","routeName","childNavigation","getChildNavigation","options","getScreenOptions","componentDidUpdate","setState","render","ThemeContext","navigationOptions"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,SAASA,eAAT,CAAyBC,aAAzB,EAAwCC,MAAxC,EAAgDC,gBAAhD,EAAkE;AAChE,QAAMC,SAAN,SAAwBC,eAAMC,SAA9B,CAAwC;AACtC;AAKAC,IAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,YAAMD,KAAN,EAAaC,OAAb;AAEA,WAAKC,KAAL,GAAa;AACXC,QAAAA,WAAW,EAAE,EADF;AAEXC,QAAAA,WAAW,EAAE,KAAKJ,KAAL,CAAWI,WAFb;AAGXC,QAAAA,KAAK,EAAEJ,OAHI;AAIXK,QAAAA,YAAY,EAAEL;AAJH,OAAb;AAMD;;AAED,WAAOM,wBAAP,CAAgCC,SAAhC,EAA2CC,YAA3C,EAAyD;AACvD,YAAMC,eAAe,GAAGD,YAAY,CAACN,WAArC;AACA,YAAM;AAAEQ,QAAAA,UAAF;AAAcP,QAAAA;AAAd,UAA8BI,SAApC;AACA,8BACEG,UAAU,IAAI,IADhB,EAEE,kMAFF;AAIA,YAAM;AAAET,QAAAA;AAAF,UAAYS,UAAlB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAaV,KAAnB;;AACA,UAAI,OAAOU,MAAP,KAAkB,WAAtB,EAAmC;AACjC,cAAM,IAAIC,SAAJ,CACJ,oNADI,CAAN;AAGD;;AAED,YAAMV,WAAW,GAAGS,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAChD,YACEN,eAAe,IACfA,eAAe,CAACM,KAAK,CAACC,GAAP,CADf,IAEAD,KAAK,KAAKN,eAAe,CAACM,KAAK,CAACC,GAAP,CAAf,CAA2Bf,KAFrC,IAGAE,WAAW,KAAKK,YAAY,CAACL,WAH7B,IAIAK,YAAY,CAACH,YAAb,KAA8BG,YAAY,CAACJ,KAL7C,EAME;AACAU,UAAAA,GAAG,CAACC,KAAK,CAACC,GAAP,CAAH,GAAiBP,eAAe,CAACM,KAAK,CAACC,GAAP,CAAhC;AACA,iBAAOF,GAAP;AACD;;AACD,cAAMG,YAAY,GAAGxB,MAAM,CAACyB,wBAAP,CAAgCC,IAAhC,CACnB,IADmB,EAEnBJ,KAAK,CAACK,SAFa,CAArB;AAIA,cAAMC,eAAe,GAAGX,UAAU,CAACY,kBAAX,CAA8BP,KAAK,CAACC,GAApC,CAAxB;AACA,cAAMO,OAAO,GAAG9B,MAAM,CAAC+B,gBAAP,CACdH,eADc,EAEdlB,WAFc,EAGdK,YAAY,CAACH,YAHC,CAAhB;AAKAS,QAAAA,GAAG,CAACC,KAAK,CAACC,GAAP,CAAH,GAAiB;AACfA,UAAAA,GAAG,EAAED,KAAK,CAACC,GADI;AAEfC,UAAAA,YAFe;AAGfM,UAAAA,OAHe;AAIftB,UAAAA,KAAK,EAAEc,KAJQ;AAKfL,UAAAA,UAAU,EAAEW;AALG,SAAjB;AAOA,eAAOP,GAAP;AACD,OA7BmB,EA6BjB,EA7BiB,CAApB;AA+BA,aAAO;AAAEZ,QAAAA,WAAF;AAAeC,QAAAA,WAAf;AAA4BC,QAAAA,KAAK,EAAEH,KAAK,CAACI;AAAzC,OAAP;AACD;;AAEDoB,IAAAA,kBAAkB,GAAG;AACnB,UAAI,KAAKzB,OAAL,KAAiB,KAAKC,KAAL,CAAWI,YAAhC,EAA8C;AAC5C;AACA,aAAKqB,QAAL,CAAc;AAAErB,UAAAA,YAAY,EAAE,KAAKL;AAArB,SAAd;AACD;AACF;;AAED2B,IAAAA,MAAM,GAAG;AACP,aACE,6BAAC,aAAD,eACM,KAAK5B,KADX;AAEE,QAAA,WAAW,EAAE,KAAKE,KAAL,CAAWE,WAF1B;AAGE,QAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWW,UAHzB;AAIE,QAAA,gBAAgB,EAAEhB,gBAJpB;AAKE,QAAA,WAAW,EAAE,KAAKO,KAAL,CAAWC;AAL1B,SADF;AASD;;AAnFqC;;AADwB,kBAC1DP,SAD0D,iBAGzCiC,qBAHyC;;AAAA,kBAC1DjC,SAD0D,YAI9CF,MAJ8C;;AAAA,kBAC1DE,SAD0D,uBAKnCD,gBAAgB,CAACmC,iBALkB;;AAuFhE,SAAOlC,SAAP;AACD;;eAEcJ,e","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\nimport ThemeContext from '../views/ThemeContext';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    // eslint-disable-next-line react/sort-comp\n    static contextType = ThemeContext;\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    constructor(props, context) {\n      super(props, context);\n\n      this.state = {\n        descriptors: {},\n        screenProps: this.props.screenProps,\n        theme: context,\n        themeContext: context,\n      };\n    }\n\n    static getDerivedStateFromProps(nextProps, currentState) {\n      const prevDescriptors = currentState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation v3 and v4 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = routes.reduce((acc, route) => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === currentState.screenProps &&\n          currentState.themeContext === currentState.theme\n        ) {\n          acc[route.key] = prevDescriptors[route.key];\n          return acc;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(\n          childNavigation,\n          screenProps,\n          currentState.themeContext\n        );\n        acc[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n        return acc;\n      }, {});\n\n      return { descriptors, screenProps, theme: state.themeContext };\n    }\n\n    componentDidUpdate() {\n      if (this.context !== this.state.themeContext) {\n        // eslint-disable-next-line react/no-did-update-set-state\n        this.setState({ themeContext: this.context });\n      }\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]}