{"version":3,"sources":["getChildNavigation.js"],"names":["getChildEventSubscriber","getChildRouter","getNavigationActionCreators","getChildrenNavigationCache","createParamGetter","route","paramName","defaultValue","params","getChildNavigation","navigation","childKey","getCurrentParentNavigation","children","childRoute","state","routes","find","r","key","childRouter","router","routeName","focusedGrandChildRoute","index","actionCreators","actions","getActionCreators","actionHelpers","Object","keys","forEach","actionName","args","actionCreator","action","dispatch","isFirstRouteInParent","parentNavigation","indexOf","getParam","childSubscriber","addListener","grandChildKey","nav","isFocused","currentNavigation","getScreenProps","dangerouslyGetParent","emit"],"mappings":"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","sourcesContent":["import getChildEventSubscriber from './getChildEventSubscriber';\nimport getChildRouter from './getChildRouter';\nimport getNavigationActionCreators from './routers/getNavigationActionCreators';\nimport getChildrenNavigationCache from './getChildrenNavigationCache';\n\nconst createParamGetter = route => (paramName, defaultValue) => {\n  const params = route.params;\n\n  if (params && paramName in params) {\n    return params[paramName];\n  }\n\n  return defaultValue;\n};\n\nfunction getChildNavigation(navigation, childKey, getCurrentParentNavigation) {\n  const children = getChildrenNavigationCache(navigation);\n  const childRoute = navigation.state.routes.find(r => r.key === childKey);\n\n  if (!childRoute) {\n    return null;\n  }\n\n  if (children[childKey] && children[childKey].state === childRoute) {\n    return children[childKey];\n  }\n\n  const childRouter = getChildRouter(navigation.router, childRoute.routeName);\n\n  // If the route has children, we'll use this to pass in to the action creators\n  // for the childRouter so that any action that depends on the active route will\n  // behave as expected. We don't explicitly require that routers implement routes\n  // and index properties, but if we did then we would put an invariant here to\n  // ensure that a focusedGrandChildRoute exists if childRouter is defined.\n  const focusedGrandChildRoute =\n    childRoute.routes && typeof childRoute.index === 'number'\n      ? childRoute.routes[childRoute.index]\n      : null;\n\n  const actionCreators = {\n    ...navigation.actions,\n    ...navigation.router.getActionCreators(childRoute, navigation.state.key),\n    ...(childRouter\n      ? childRouter.getActionCreators(focusedGrandChildRoute, childRoute.key)\n      : {}),\n    ...getNavigationActionCreators(childRoute),\n  };\n\n  const actionHelpers = {};\n  Object.keys(actionCreators).forEach(actionName => {\n    actionHelpers[actionName] = (...args) => {\n      const actionCreator = actionCreators[actionName];\n      const action = actionCreator(...args);\n      return navigation.dispatch(action);\n    };\n  });\n\n  let isFirstRouteInParent = true;\n\n  const parentNavigation = getCurrentParentNavigation();\n\n  if (parentNavigation) {\n    isFirstRouteInParent =\n      parentNavigation.state.routes.indexOf(childRoute) === 0;\n  }\n\n  if (\n    children[childKey] &&\n    children[childKey].isFirstRouteInParent() === isFirstRouteInParent\n  ) {\n    children[childKey] = {\n      ...children[childKey],\n      ...actionHelpers,\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n    };\n    return children[childKey];\n  } else {\n    const childSubscriber = getChildEventSubscriber(\n      navigation.addListener,\n      childKey\n    );\n\n    children[childKey] = {\n      ...actionHelpers,\n\n      state: childRoute,\n      router: childRouter,\n      actions: actionCreators,\n      getParam: createParamGetter(childRoute),\n\n      getChildNavigation: grandChildKey =>\n        getChildNavigation(children[childKey], grandChildKey, () => {\n          const nav = getCurrentParentNavigation();\n          return nav && nav.getChildNavigation(childKey);\n        }),\n\n      isFocused: () => {\n        const currentNavigation = getCurrentParentNavigation();\n        if (!currentNavigation) {\n          return false;\n        }\n        const { routes, index } = currentNavigation.state;\n        if (!currentNavigation.isFocused()) {\n          return false;\n        }\n        if (routes[index].key === childKey) {\n          return true;\n        }\n        return false;\n      },\n      isFirstRouteInParent: () => isFirstRouteInParent,\n      dispatch: navigation.dispatch,\n      getScreenProps: navigation.getScreenProps,\n      dangerouslyGetParent: getCurrentParentNavigation,\n      addListener: childSubscriber.addListener,\n      emit: childSubscriber.emit,\n    };\n    return children[childKey];\n  }\n}\n\nexport default getChildNavigation;\n"]}