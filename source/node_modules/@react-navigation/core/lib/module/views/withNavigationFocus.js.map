{"version":3,"sources":["withNavigationFocus.js"],"names":["React","hoistStatics","withNavigation","withNavigationFocus","Component","ComponentWithNavigationFocus","constructor","props","subscriptions","navigation","addListener","setState","isFocused","state","componentWillUnmount","forEach","sub","remove","render","onRef","displayName","name","forwardRef"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,eAAe,SAASC,mBAAT,CAA6BC,SAA7B,EAAwC;AACrD,QAAMC,4BAAN,SAA2CL,KAAK,CAACI,SAAjD,CAA2D;AAIzDE,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,YAAMA,KAAN;AAEA,WAAKC,aAAL,GAAqB,CACnBD,KAAK,CAACE,UAAN,CAAiBC,WAAjB,CAA6B,UAA7B,EAAyC,MACvC,KAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CADmB,EAInBL,KAAK,CAACE,UAAN,CAAiBC,WAAjB,CAA6B,UAA7B,EAAyC,MACvC,KAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd,CADF,CAJmB,CAArB;AASA,WAAKC,KAAL,GAAa;AACXD,QAAAA,SAAS,EAAEL,KAAK,CAACE,UAAN,GAAmBF,KAAK,CAACE,UAAN,CAAiBG,SAAjB,EAAnB,GAAkD;AADlD,OAAb;AAGD;;AAEDE,IAAAA,oBAAoB,GAAG;AACrB,WAAKN,aAAL,CAAmBO,OAAnB,CAA2BC,GAAG,IAAIA,GAAG,CAACC,MAAJ,EAAlC;AACD;;AAEDC,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,SAAD,eACM,KAAKX,KADX;AAEE,QAAA,SAAS,EAAE,KAAKM,KAAL,CAAWD,SAFxB;AAGE,QAAA,GAAG,EAAE,KAAKL,KAAL,CAAWY;AAHlB,SADF;AAOD;;AAjCwD;;AADN,kBAC/Cd,4BAD+C,+CAEPD,SAAS,CAACgB,WAAV,IAC1ChB,SAAS,CAACiB,IAHuC;;AAqCrD,SAAOpB,YAAY,CACjBC,cAAc,CAACG,4BAAD,EAA+B;AAAEiB,IAAAA,UAAU,EAAE;AAAd,GAA/B,CADG,EAEjBlB,SAFiB,CAAnB;AAID","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport withNavigation from './withNavigation';\n\nexport default function withNavigationFocus(Component) {\n  class ComponentWithNavigationFocus extends React.Component {\n    static displayName = `withNavigationFocus(${Component.displayName ||\n      Component.name})`;\n\n    constructor(props) {\n      super(props);\n\n      this.subscriptions = [\n        props.navigation.addListener('didFocus', () =>\n          this.setState({ isFocused: true })\n        ),\n        props.navigation.addListener('willBlur', () =>\n          this.setState({ isFocused: false })\n        ),\n      ];\n\n      this.state = {\n        isFocused: props.navigation ? props.navigation.isFocused() : false,\n      };\n    }\n\n    componentWillUnmount() {\n      this.subscriptions.forEach(sub => sub.remove());\n    }\n\n    render() {\n      return (\n        <Component\n          {...this.props}\n          isFocused={this.state.isFocused}\n          ref={this.props.onRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(\n    withNavigation(ComponentWithNavigationFocus, { forwardRef: false }),\n    Component\n  );\n}\n"]}