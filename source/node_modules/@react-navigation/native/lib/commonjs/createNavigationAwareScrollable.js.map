{"version":3,"sources":["createNavigationAwareScrollable.js"],"names":["createNavigationAwareScrollable","Component","ComponentWithNavigationScrolling","React","PureComponent","componentDidMount","_subscription","props","navigation","addListener","scrollableNode","getNode","isFocused","scrollToTop","scrollTo","y","scrollResponderScrollTo","componentWillUnmount","remove","_scrollRef","getScrollResponder","render","view","displayName","name","NavigationAwareScrollable","_innerRef","onRef","args","setNativeProps","getScrollableNode","getInnerViewNode","scrollToEnd","scrollWithoutAnimationTo","flashScrollIndicators","_captureRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\nimport { withNavigation } from '@react-navigation/core';\n\nexport default function createNavigationAwareScrollable(Component) {\n  const ComponentWithNavigationScrolling = withNavigation(\n    class extends React.PureComponent<any> {\n      static displayName = `withNavigationScrolling(${Component.displayName ||\n        Component.name})`;\n\n      componentDidMount() {\n        this._subscription = this.props.navigation.addListener(\n          'refocus',\n          () => {\n            const scrollableNode = this.getNode();\n            if (this.props.navigation.isFocused() && scrollableNode !== null) {\n              if (scrollableNode.scrollToTop != null) {\n                scrollableNode.scrollToTop();\n              } else if (scrollableNode.scrollTo != null) {\n                scrollableNode.scrollTo({ y: 0 });\n              } else if (scrollableNode.scrollResponderScrollTo != null) {\n                scrollableNode.scrollResponderScrollTo({ y: 0 });\n              }\n            }\n          }\n        );\n      }\n\n      componentWillUnmount() {\n        if (this._subscription != null) {\n          this._subscription.remove();\n        }\n      }\n\n      getNode() {\n        if (this._scrollRef === null) {\n          return null;\n        }\n\n        if (this._scrollRef.getScrollResponder) {\n          return this._scrollRef.getScrollResponder();\n        } else if (this._scrollRef.getNode) {\n          return this._scrollRef.getNode();\n        } else {\n          return this._scrollRef;\n        }\n      }\n\n      render() {\n        return (\n          <Component\n            ref={view => {\n              this._scrollRef = view;\n            }}\n            {...this.props}\n          />\n        );\n      }\n    }\n  );\n\n  class NavigationAwareScrollable extends React.PureComponent<any> {\n    static displayName = `NavigationAwareScrollable(${Component.displayName ||\n      Component.name})`;\n\n    _captureRef = view => {\n      this._innerRef = view;\n      this.props.onRef && this.props.onRef(view);\n    };\n\n    setNativeProps = (...args) => {\n      return this._innerRef.getNode().setNativeProps(...args);\n    };\n\n    getScrollResponder = (...args) => {\n      return this._innerRef.getNode().getScrollResponder(...args);\n    };\n\n    getScrollableNode = (...args) => {\n      return this._innerRef.getNode().getScrollableNode(...args);\n    };\n\n    getInnerViewNode = (...args) => {\n      return this._innerRef.getNode().getInnerViewNode(...args);\n    };\n\n    scrollTo = (...args) => {\n      return this._innerRef.getNode().scrollTo(...args);\n    };\n\n    scrollToEnd = (...args) => {\n      return this._innerRef.getNode().scrollToEnd(...args);\n    };\n\n    scrollWithoutAnimationTo = (...args) => {\n      return this._innerRef.getNode().scrollWithoutAnimationTo(...args);\n    };\n\n    flashScrollIndicators = (...args) => {\n      return this._innerRef.getNode().flashScrollIndicators(...args);\n    };\n\n    render() {\n      return (\n        <ComponentWithNavigationScrolling\n          {...this.props}\n          onRef={this._captureRef}\n        />\n      );\n    }\n  }\n\n  return hoistStatics(NavigationAwareScrollable, Component);\n}\n"]}