{"version":3,"sources":["createKeyboardAwareNavigator.js"],"names":["React","TextInput","Navigator","navigatorConfig","KeyboardAwareNavigator","Component","_previouslyFocusedTextInput","State","currentlyFocusedField","blurTextInput","props","onGestureBegin","focusTextInput","onGestureCanceled","onGestureFinish","transitionProps","prevTransitionProps","index","currentField","onTransitionStart","render","_handleGestureBegin","_handleGestureCanceled","_handleGestureEnd","_handleTransitionStart","router","navigationOptions"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,gBAAe,CAACC,SAAD,EAAYC,eAAZ;AAAA;;AAAA,0BACb,MAAMC,sBAAN,SAAqCJ,KAAK,CAACK,SAA3C,CAAqD;AAAA;AAAA;;AAAA,2DAGrB,IAHqB;;AAAA,mDAK7B,MAAM;AAC1B,aAAKC,2BAAL,GAAmCL,SAAS,CAACM,KAAV,CAAgBC,qBAAhB,EAAnC;;AACA,YAAI,KAAKF,2BAAT,EAAsC;AACpCL,UAAAA,SAAS,CAACM,KAAV,CAAgBE,aAAhB,CAA8B,KAAKH,2BAAnC;AACD;;AACD,aAAKI,KAAL,CAAWC,cAAX,IAA6B,KAAKD,KAAL,CAAWC,cAAX,EAA7B;AACD,OAXkD;;AAAA,sDAa1B,MAAM;AAC7B,YAAI,KAAKL,2BAAT,EAAsC;AACpCL,UAAAA,SAAS,CAACM,KAAV,CAAgBK,cAAhB,CAA+B,KAAKN,2BAApC;AACD;;AACD,aAAKI,KAAL,CAAWG,iBAAX,IAAgC,KAAKH,KAAL,CAAWG,iBAAX,EAAhC;AACD,OAlBkD;;AAAA,iDAoB/B,MAAM;AACxB,aAAKP,2BAAL,GAAmC,IAAnC;AACA,aAAKI,KAAL,CAAWI,eAAX,IAA8B,KAAKJ,KAAL,CAAWI,eAAX,EAA9B;AACD,OAvBkD;;AAAA,sDAyB1B,CAACC,eAAD,EAAkBC,mBAAlB,KAA0C;AACjE;AACA;AACA;AACA,YAAID,eAAe,CAACE,KAAhB,KAA0BD,mBAAmB,CAACC,KAAlD,EAAyD;AACvD,gBAAMC,YAAY,GAAGjB,SAAS,CAACM,KAAV,CAAgBC,qBAAhB,EAArB;;AACA,cAAIU,YAAJ,EAAkB;AAChBjB,YAAAA,SAAS,CAACM,KAAV,CAAgBE,aAAhB,CAA8BS,YAA9B;AACD;AACF;;AAED,cAAMC,iBAAiB,GACrB,KAAKT,KAAL,CAAWS,iBAAX,IAAgChB,eAAe,CAACgB,iBADlD;AAEAA,QAAAA,iBAAiB,IACfA,iBAAiB,CAACJ,eAAD,EAAkBC,mBAAlB,CADnB;AAED,OAxCkD;AAAA;;AA0CnDI,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,SAAD,eACM,KAAKV,KADX;AAEE,QAAA,cAAc,EAAE,KAAKW,mBAFvB;AAGE,QAAA,iBAAiB,EAAE,KAAKC,sBAH1B;AAIE,QAAA,YAAY,EAAE,KAAKC,iBAJrB;AAKE,QAAA,iBAAiB,EAAE,KAAKC;AAL1B,SADF;AASD;;AApDkD,GADxC,oCAEKtB,SAAS,CAACuB,MAFf,gDAGgBvB,SAAS,CAACwB,iBAH1B;AAAA,CAAf","sourcesContent":["import React from 'react';\nimport { TextInput } from 'react-native';\n\nexport default (Navigator, navigatorConfig) =>\n  class KeyboardAwareNavigator extends React.Component {\n    static router = Navigator.router;\n    static navigationOptions = Navigator.navigationOptions;\n    _previouslyFocusedTextInput = null;\n\n    _handleGestureBegin = () => {\n      this._previouslyFocusedTextInput = TextInput.State.currentlyFocusedField();\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.blurTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureBegin && this.props.onGestureBegin();\n    };\n\n    _handleGestureCanceled = () => {\n      if (this._previouslyFocusedTextInput) {\n        TextInput.State.focusTextInput(this._previouslyFocusedTextInput);\n      }\n      this.props.onGestureCanceled && this.props.onGestureCanceled();\n    };\n\n    _handleGestureEnd = () => {\n      this._previouslyFocusedTextInput = null;\n      this.props.onGestureFinish && this.props.onGestureFinish();\n    };\n\n    _handleTransitionStart = (transitionProps, prevTransitionProps) => {\n      // TODO: We should not even have received the transition start event\n      // in the case where the index did not change, I believe. We\n      // should revisit this after 2.0 release.\n      if (transitionProps.index !== prevTransitionProps.index) {\n        const currentField = TextInput.State.currentlyFocusedField();\n        if (currentField) {\n          TextInput.State.blurTextInput(currentField);\n        }\n      }\n\n      const onTransitionStart =\n        this.props.onTransitionStart || navigatorConfig.onTransitionStart;\n      onTransitionStart &&\n        onTransitionStart(transitionProps, prevTransitionProps);\n    };\n\n    render() {\n      return (\n        <Navigator\n          {...this.props}\n          onGestureBegin={this._handleGestureBegin}\n          onGestureCanceled={this._handleGestureCanceled}\n          onGestureEnd={this._handleGestureEnd}\n          onTransitionStart={this._handleTransitionStart}\n        />\n      );\n    }\n  };\n"]}