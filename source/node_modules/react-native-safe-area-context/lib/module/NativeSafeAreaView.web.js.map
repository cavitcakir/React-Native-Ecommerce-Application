{"version":3,"sources":["NativeSafeAreaView.web.tsx"],"names":["React","View","CSSTransitions","WebkitTransition","Transition","MozTransition","MSTransition","OTransition","NativeSafeAreaView","children","style","onInsetsChange","useEffect","document","element","createContextElement","body","appendChild","onEnd","window","getComputedStyle","paddingTop","paddingBottom","paddingLeft","paddingRight","insets","top","parseInt","bottom","left","right","nativeEvent","addEventListener","getSupportedTransitionEvent","removeChild","removeEventListener","_supportedTransitionEvent","createElement","key","undefined","_supportedEnv","getSupportedEnv","CSS","supports","getInset","side","position","width","height","zIndex","overflow","visibility","transitionDuration","transitionProperty","transitionDelay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ViewStyle, View } from 'react-native';\n\nimport { InsetChangeNativeCallback } from './SafeArea.types';\n\ninterface NativeSafeAreaViewProps {\n  children?: React.ReactNode;\n  style: ViewStyle;\n  onInsetsChange: InsetChangeNativeCallback;\n}\n\nconst CSSTransitions: Record<string, string> = {\n  WebkitTransition: 'webkitTransitionEnd',\n  Transition: 'transitionEnd',\n  MozTransition: 'transitionend',\n  MSTransition: 'msTransitionEnd',\n  OTransition: 'oTransitionEnd',\n};\n\nexport default function NativeSafeAreaView({\n  children,\n  style,\n  onInsetsChange,\n}: NativeSafeAreaViewProps) {\n  React.useEffect(() => {\n    // Skip for SSR.\n    if (typeof document === 'undefined') {\n      return;\n    }\n\n    const element = createContextElement();\n    document.body.appendChild(element);\n    const onEnd = () => {\n      const {\n        paddingTop,\n        paddingBottom,\n        paddingLeft,\n        paddingRight,\n      } = window.getComputedStyle(element);\n\n      const insets = {\n        top: paddingTop ? parseInt(paddingTop, 10) : 0,\n        bottom: paddingBottom ? parseInt(paddingBottom, 10) : 0,\n        left: paddingLeft ? parseInt(paddingLeft, 10) : 0,\n        right: paddingRight ? parseInt(paddingRight, 10) : 0,\n      };\n      // @ts-ignore: missing properties\n      onInsetsChange({ nativeEvent: { insets } });\n    };\n    element.addEventListener(getSupportedTransitionEvent(), onEnd);\n    onEnd();\n    return () => {\n      document.body.removeChild(element);\n      element.removeEventListener(getSupportedTransitionEvent(), onEnd);\n    };\n  }, [onInsetsChange]);\n\n  return <View style={style}>{children}</View>;\n}\n\nlet _supportedTransitionEvent: string | null = null;\nfunction getSupportedTransitionEvent(): string {\n  if (_supportedTransitionEvent !== null) {\n    return _supportedTransitionEvent;\n  }\n  const element = document.createElement('invalidtype');\n\n  _supportedTransitionEvent = CSSTransitions.Transition;\n  for (const key in CSSTransitions) {\n    if (element.style[key as keyof CSSStyleDeclaration] !== undefined) {\n      _supportedTransitionEvent = CSSTransitions[key];\n      break;\n    }\n  }\n  return _supportedTransitionEvent;\n}\n\ntype CssEnv = 'constant' | 'env';\n\nlet _supportedEnv: CssEnv | null = null;\nfunction getSupportedEnv(): CssEnv {\n  if (_supportedEnv !== null) {\n    return _supportedEnv;\n  }\n  const { CSS } = window;\n  if (\n    CSS &&\n    CSS.supports &&\n    CSS.supports('top: constant(safe-area-inset-top)')\n  ) {\n    _supportedEnv = 'constant';\n  } else {\n    _supportedEnv = 'env';\n  }\n  return _supportedEnv;\n}\n\nfunction getInset(side: string): string {\n  return `${getSupportedEnv()}(safe-area-inset-${side})`;\n}\n\nfunction createContextElement(): HTMLElement {\n  const element = document.createElement('div');\n  const { style } = element;\n  style.position = 'fixed';\n  style.left = '0';\n  style.top = '0';\n  style.width = '0';\n  style.height = '0';\n  style.zIndex = '-1';\n  style.overflow = 'hidden';\n  style.visibility = 'hidden';\n  // Bacon: Anything faster than this and the callback will be invoked too early with the wrong insets\n  style.transitionDuration = '0.05s';\n  style.transitionProperty = 'padding';\n  style.transitionDelay = '0s';\n  style.paddingTop = getInset('top');\n  style.paddingBottom = getInset('bottom');\n  style.paddingLeft = getInset('left');\n  style.paddingRight = getInset('right');\n  return element;\n}\n"]}