{"version":3,"sources":["validateDeprecatedConfig.tsx"],"names":["shownWarnings","validations","transparentCard","message","compat","c","o","cardStyle","backgroundColor","headerLayoutPreset","headerTitleAlign","headerTransitionPreset","transitionConfig","reduce","acc","name","validateDeprecatedConfig","config","options","result","Object","keys","forEach","process","env","NODE_ENV","includes","console","warn","push"],"mappings":";;;;;;;;;;;;;AAWA,MAAMA,aAAuB,GAAG,EAAhC;;AAEA,MAAMC,WAAuC;AAC3CC,EAAAA,eAAe,EAAE;AACfC,IAAAA,OAAO,yLADQ;AAEfC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KACND,CAAC,CAACH,eAAF,qBAESI,CAFT;AAGMC,MAAAA,SAAS,EAAE,CACT;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OADS,EAETF,CAAC,CAACC,SAFO;AAHjB,SAQID;AAXS,GAD0B;AAc3CG,EAAAA,kBAAkB,EAAE;AAClBN,IAAAA,OAAO,gKADW;AAElBC,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,uBAAgBA,CAAhB;AAAmBI,MAAAA,gBAAgB,EAAEL,CAAC,CAACI;AAAvC;AAFU,GAduB;AAkB3CE,EAAAA,sBAAsB,EAAE;AACtBR,IAAAA,OAAO;AADe,GAlBmB;AAqB3CS,EAAAA,gBAAgB,EAAE;AAChBT,IAAAA,OAAO;AADS;AArByB,GAwBxC,CACD,mBADC,EAED,oBAFC,EAGD,WAHC,EAID,wBAJC,EAKD,mBALC,EAMD,iBANC,EAODU,MAPC,CAOkC,CAACC,GAAD,EAAMC,IAAN,KAAe;AAClDD,EAAAA,GAAG,CAACC,IAAD,CAAH,GAAY;AACVZ,IAAAA,OAAO,aAAMY,IAAN,4GADG;AAEVX,IAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,uBAAgBA,CAAhB;AAAmB,OAACS,IAAD,GAAQ,MAAMV,CAAC,CAACU,IAAD;AAAlC;AAFE,GAAZ;AAKA,SAAOD,GAAP;AACD,CAdE,EAcA,EAdA,CAxBwC,CAA7C;;AAyCe,SAASE,wBAAT,CACbC,MADa,EAEbC,OAFa,EAGb;AACA,MAAIC,MAAM,GAAGD,OAAb;AAEAE,EAAAA,MAAM,CAACC,IAAP,CAAYpB,WAAZ,EAAyBqB,OAAzB,CAAkCP,IAAD,IAAU;AACzC,QAAIA,IAAI,IAAIE,MAAZ,EAAoB;AAClB,YAAM;AAAEb,QAAAA,MAAF;AAAUD,QAAAA;AAAV,UAAsBF,WAAW,CAACc,IAAD,CAAvC;AAEAI,MAAAA,MAAM,GAAGf,MAAM,GAAGA,MAAM,CAACa,MAAD,EAASE,MAAT,CAAT,GAA4BA,MAA3C;;AAEA,UAAII,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,YAAIzB,aAAa,CAAC0B,QAAd,CAAuBvB,OAAvB,CAAJ,EAAqC;AACnC;AACD;;AAEDwB,QAAAA,OAAO,CAACC,IAAR,mDAAwDzB,OAAxD;AACAH,QAAAA,aAAa,CAAC6B,IAAd,CAAmB1B,OAAnB;AACD;AACF;AACF,GAfD;AAiBA,SAAOgB,MAAP;AACD","sourcesContent":["import { StyleProp, ViewStyle } from 'react-native';\nimport { StackNavigationOptions, StackNavigationConfig } from '../vendor/types';\n\ntype Validation = {\n  message: string;\n  compat?: (\n    c: Record<string, any>,\n    o: StackNavigationOptions\n  ) => StackNavigationOptions;\n};\n\nconst shownWarnings: string[] = [];\n\nconst validations: Record<string, Validation> = {\n  transparentCard: {\n    message: `'transparentCard' is removed in favor of 'cardStyle: { backgroundColor: 'transparent' }' in 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n    compat: (c, o) =>\n      c.transparentCard\n        ? {\n            ...o,\n            cardStyle: [\n              { backgroundColor: 'transparent' },\n              o.cardStyle,\n            ] as StyleProp<ViewStyle>,\n          }\n        : o,\n  },\n  headerLayoutPreset: {\n    message: `'headerLayoutPreset' is renamed to 'headerTitleAlign' and moved to 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n    compat: (c, o) => ({ ...o, headerTitleAlign: c.headerLayoutPreset }),\n  },\n  headerTransitionPreset: {\n    message: `'headerTransitionPreset' is removed in favor of the new animation APIs`,\n  },\n  transitionConfig: {\n    message: `'transitionConfig' is removed in favor of the new animation APIs`,\n  },\n  ...[\n    'cardShadowEnabled',\n    'cardOverlayEnabled',\n    'cardStyle',\n    'headerBackTitleVisible',\n    'onTransitionStart',\n    'onTransitionEnd',\n  ].reduce<Record<string, Validation>>((acc, name) => {\n    acc[name] = {\n      message: `'${name}' is moved to 'navigationOptions'. Specify it in 'defaultNavigationOptions' to keep the same behaviour.`,\n      compat: (c, o) => ({ ...o, [name]: () => c[name] }),\n    };\n\n    return acc;\n  }, {}),\n};\n\nexport default function validateDeprecatedConfig(\n  config: StackNavigationConfig,\n  options: StackNavigationOptions\n) {\n  let result = options;\n\n  Object.keys(validations).forEach((name) => {\n    if (name in config) {\n      const { compat, message } = validations[name];\n\n      result = compat ? compat(config, result) : result;\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (shownWarnings.includes(message)) {\n          return;\n        }\n\n        console.warn(`Deprecation in 'createStackNavigator':\\n${message}`);\n        shownWarnings.push(message);\n      }\n    }\n  });\n\n  return result;\n}\n"]}